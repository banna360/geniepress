/*!
 * Preboot v2
 *
 * Open sourced under MIT license by @mdo.
 * Some variables and mixins from Bootstrap (Apache 2 license).
 */

//
// Grid system
// --------------------------------------------------

// Grid
@mixin make-row() {
    // Negative margin the row out to align the content of columns
    margin-left: -$grid-column-padding;
    margin-right: -$grid-column-padding;
    // Then clear the floated columns
    @include clearfix();
}

@mixin make-column($columns) {
    // @media (min-width: $grid-float-breakpoint) {
    float: left;
    // Calculate width based on number of columns available
    width: percentage($columns / $grid-columns);
    // }
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Set inner padding as gutters instead of margin
    padding-left: $grid-column-padding;
    padding-right: $grid-column-padding;
    // Proper box-model (padding doesn't add to width)
    @include box-sizing(border-box);
}

@mixin make-10-column($columns) {
    // @media (min-width: $grid-float-breakpoint) {
    float: left;
    // Calculate width based on number of columns available
    width: percentage($columns / 10);
    // }
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Set inner padding as gutters instead of margin
    padding-left: $grid-column-padding;
    padding-right: $grid-column-padding;
    // Proper box-model (padding doesn't add to width)
    @include box-sizing(border-box);
}

@mixin make-column-offset($columns) {
    @media (min-width: $grid-float-breakpoint) {
        margin-left: percentage($columns / $grid-columns);
    }
}

//
// Mixins: vendor prefixes
// --------------------------------------------------

// Box sizing
@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
    -moz-box-sizing: $box-model; // Firefox <= 19
    box-sizing: $box-model;
}

// Single side border-radius
@mixin border-top-radius($radius) {
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
    border-bottom-right-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
    box-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
    -o-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
    -webkit-transition-duration: $transition-duration;
    -moz-transition-duration: $transition-duration;
    -o-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}

// Transformations
@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}

@mixin scale($ratio) {
    -webkit-transform: scale($ratio);
    -moz-transform: scale($ratio);
    -ms-transform: scale($ratio);
    -o-transform: scale($ratio);
    transform: scale($ratio);
}

@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin skew($x, $y) {
    -webkit-transform: skew($x, $y);
    -moz-transform: skew($x, $y);
    -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
    -o-transform: skew($x, $y);
    transform: skew($x, $y);
    -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

// Backface visibility
//
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility) {
    -webkit-backface-visibility: $visibility;
    -moz-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

// User select
//
// For selecting text on the page
@mixin user-select($select) {
    -webkit-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    -o-user-select: $select;
    user-select: $select;
}

// Opacity
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: "alpha(opacity=#{$opacity-ie})"; // IE8
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
    &:-moz-placeholder {
        color: $color;
    }
    // Firefox 4-18
    &::-moz-placeholder {
        color: $color;
    }
    // Firefox 19+
    &:-ms-input-placeholder {
        color: $color;
    }
    // Internet Explorer 10+
    &::-webkit-input-placeholder {
        color: $color;
    }
    // Safari and Chrome
}

// Resize anything
@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

// CSS3 Content Columns
@mixin content-columns($width, $count, $gap) {
    -webkit-column-width: $width;
    -moz-column-width: $width;
    column-width: $width;
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
    -webkit-column-gap: $gap;
    -moz-column-gap: $gap;
    column-gap: $gap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: $mode;
    -moz-hyphens: $mode;
    -ms-hyphens: $mode;
    -o-hyphens: $mode;
    hyphens: $mode;
}

// Gradients

@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
    background-color: $endColor;
    background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(
        linear,
        0 0,
        100% 0,
        from($startColor),
        to($endColor)
    ); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(
        left,
        $startColor,
        $endColor
    ); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(
            startColorstr="#{ie_hex_str($startColor)}",
            endColorstr="#{ie_hex_str($endColor)}",
            GradientType=1
        ); // IE9 and down
}

@mixin gradient-vertical($startColor: #555, $endColor: #333) {
    background-color: $endColor;
    background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(
        linear,
        0 0,
        0 100%,
        from($startColor),
        to($endColor)
    ); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(
        top,
        $startColor,
        $endColor
    ); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(
            startColorstr="#{ie_hex_str($startColor)}",
            endColorstr="#{ie_hex_str($endColor)}",
            GradientType=0
        ); // IE9 and down
}

@mixin gradient-directional($startColor: #555, $endColor: #333, $deg: 45deg) {
    background-color: $endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(
        $deg,
        $startColor,
        $endColor
    ); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient($deg, $startColor, $endColor); // Standard, IE10
}

@mixin gradient-horizontal-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
    background-color: mix($midColor, $endColor, 80%);
    background-image: -webkit-gradient(
        left,
        linear,
        0 0,
        0 100%,
        from($startColor),
        color-stop($colorStop, $midColor),
        to($endColor)
    );
    background-image: -webkit-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: -moz-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: -o-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: linear-gradient(to right, $startColor, $midColor $colorStop, $endColor);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(
            startColorstr="#{ie_hex_str($startColor)}",
            endColorstr="#{ie_hex_str($endColor)}",
            GradientType=0
        ); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
    background-color: mix($midColor, $endColor, 80%);
    background-image: -webkit-gradient(
        linear,
        0 0,
        0 100%,
        from($startColor),
        color-stop($colorStop, $midColor),
        to($endColor)
    );
    background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
    background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(
            startColorstr="#{ie_hex_str($startColor)}",
            endColorstr="#{ie_hex_str($endColor)}",
            GradientType=0
        ); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-radial($innerColor: #555, $outerColor: #333) {
    background-color: $outerColor;
    background-image: -webkit-gradient(
        radial,
        center center,
        0,
        center center,
        460,
        from($innerColor),
        to($outerColor)
    );
    background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
    background-repeat: no-repeat;
}

@mixin gradient-striped($color: #555, $angle: 45deg) {
    background-color: $color;
    background-image: -webkit-gradient(
        linear,
        0 100%,
        100% 0,
        color-stop(0.25, rgba(255, 255, 255, 0.15)),
        color-stop(0.25, transparent),
        color-stop(0.5, transparent),
        color-stop(0.5, rgba(255, 255, 255, 0.15)),
        color-stop(0.75, rgba(255, 255, 255, 0.15)),
        color-stop(0.75, transparent),
        to(transparent)
    );
    background-image: -webkit-linear-gradient(
        $angle,
        rgba(255, 255, 255, 0.15) 25%,
        transparent 25%,
        transparent 50%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.15) 75%,
        transparent 75%,
        transparent
    );
    background-image: -moz-linear-gradient(
        $angle,
        rgba(255, 255, 255, 0.15) 25%,
        transparent 25%,
        transparent 50%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.15) 75%,
        transparent 75%,
        transparent
    );
    background-image: -o-linear-gradient(
        $angle,
        rgba(255, 255, 255, 0.15) 25%,
        transparent 25%,
        transparent 50%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.15) 75%,
        transparent 75%,
        transparent
    );
    background-image: linear-gradient(
        $angle,
        rgba(255, 255, 255, 0.15) 25%,
        transparent 25%,
        transparent 50%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.15) 75%,
        transparent 75%,
        transparent
    );
}

// Reset filters for IE
//
// Useful for when you want to remove a gradient from an element.
@mixin reset-filter() {
    filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}

//
// Mixins: utilities
// --------------------------------------------------

// Clearfix
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
@mixin clearfix() {
    *zoom: 1;
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
        // Fixes Opera/contenteditable bug:
        // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
        line-height: 0;
    }
    &:after {
        clear: both;
    }
}

// Center-align a block level element
@mixin center-block() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Sizing shortcuts
@mixin size($width, $height) {
    width: $width;
    height: $height;
}

@mixin square($size) {
    @include size($size, $size);
}

// Text overflow
//
// Requires inline-block or block for proper styling
@mixin text-truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Retina images
//
// Retina background-image support with non-retina fall back
@mixin retina-image($file-1x, $file-2x, $width-1x, $height-1x) {
    background-image: url("#{$file-1x}");

    @media only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (min--moz-device-pixel-ratio: 2),
        only screen and (-o-min-device-pixel-ratio: 2/1),
        only screen and (min-device-pixel-ratio: 2),
        only screen and (min-resolution: 192dpi),
        only screen and (min-resolution: 2dppx) {
        background-image: url("#{$file-2x}");
        background-size: $width-1x $height-1x;
    }
}

@mixin flexbox() {
    display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6, BB7 */
    display: -ms-flexbox; /* TWEENER - IE 10 */
    display: -webkit-flex; /* NEW - Safari 6.1+. iOS 7.1+, BB10 */
    display: flex; /* NEW, Spec - Firefox, Chrome, Opera */
}

@mixin flex($context) {
    -webkit-box-flex: $context; /* OLD - iOS 6-, Safari 3.1-6 */
    -webkit-flex: $context; /* Safari 6.1+. iOS 7.1+, BB10 */
    -ms-flex: $context; /* IE 10 */
    flex: $context; /* NEW, Spec - Firefox, Chrome, Opera */
}

@mixin coverbg($bg) {
    background-image: url($bg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
}
